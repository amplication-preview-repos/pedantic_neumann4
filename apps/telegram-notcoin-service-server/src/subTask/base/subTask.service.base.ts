/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SubTask as PrismaSubTask } from "@prisma/client";

export class SubTaskServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SubTaskCountArgs, "select">): Promise<number> {
    return this.prisma.subTask.count(args);
  }

  async subTasks(args: Prisma.SubTaskFindManyArgs): Promise<PrismaSubTask[]> {
    return this.prisma.subTask.findMany(args);
  }
  async subTask(
    args: Prisma.SubTaskFindUniqueArgs
  ): Promise<PrismaSubTask | null> {
    return this.prisma.subTask.findUnique(args);
  }
  async createSubTask(args: Prisma.SubTaskCreateArgs): Promise<PrismaSubTask> {
    return this.prisma.subTask.create(args);
  }
  async updateSubTask(args: Prisma.SubTaskUpdateArgs): Promise<PrismaSubTask> {
    return this.prisma.subTask.update(args);
  }
  async deleteSubTask(args: Prisma.SubTaskDeleteArgs): Promise<PrismaSubTask> {
    return this.prisma.subTask.delete(args);
  }
}
