/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Squad as PrismaSquad } from "@prisma/client";

export class SquadServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SquadCountArgs, "select">): Promise<number> {
    return this.prisma.squad.count(args);
  }

  async squads(args: Prisma.SquadFindManyArgs): Promise<PrismaSquad[]> {
    return this.prisma.squad.findMany(args);
  }
  async squad(args: Prisma.SquadFindUniqueArgs): Promise<PrismaSquad | null> {
    return this.prisma.squad.findUnique(args);
  }
  async createSquad(args: Prisma.SquadCreateArgs): Promise<PrismaSquad> {
    return this.prisma.squad.create(args);
  }
  async updateSquad(args: Prisma.SquadUpdateArgs): Promise<PrismaSquad> {
    return this.prisma.squad.update(args);
  }
  async deleteSquad(args: Prisma.SquadDeleteArgs): Promise<PrismaSquad> {
    return this.prisma.squad.delete(args);
  }
}
