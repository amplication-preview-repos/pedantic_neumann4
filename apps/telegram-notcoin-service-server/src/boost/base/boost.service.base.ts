/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Boost as PrismaBoost } from "@prisma/client";

export class BoostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BoostCountArgs, "select">): Promise<number> {
    return this.prisma.boost.count(args);
  }

  async boosts(args: Prisma.BoostFindManyArgs): Promise<PrismaBoost[]> {
    return this.prisma.boost.findMany(args);
  }
  async boost(args: Prisma.BoostFindUniqueArgs): Promise<PrismaBoost | null> {
    return this.prisma.boost.findUnique(args);
  }
  async createBoost(args: Prisma.BoostCreateArgs): Promise<PrismaBoost> {
    return this.prisma.boost.create(args);
  }
  async updateBoost(args: Prisma.BoostUpdateArgs): Promise<PrismaBoost> {
    return this.prisma.boost.update(args);
  }
  async deleteBoost(args: Prisma.BoostDeleteArgs): Promise<PrismaBoost> {
    return this.prisma.boost.delete(args);
  }
}
