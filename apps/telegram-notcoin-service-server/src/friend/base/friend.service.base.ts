/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Friend as PrismaFriend } from "@prisma/client";

export class FriendServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FriendCountArgs, "select">): Promise<number> {
    return this.prisma.friend.count(args);
  }

  async friends(args: Prisma.FriendFindManyArgs): Promise<PrismaFriend[]> {
    return this.prisma.friend.findMany(args);
  }
  async friend(
    args: Prisma.FriendFindUniqueArgs
  ): Promise<PrismaFriend | null> {
    return this.prisma.friend.findUnique(args);
  }
  async createFriend(args: Prisma.FriendCreateArgs): Promise<PrismaFriend> {
    return this.prisma.friend.create(args);
  }
  async updateFriend(args: Prisma.FriendUpdateArgs): Promise<PrismaFriend> {
    return this.prisma.friend.update(args);
  }
  async deleteFriend(args: Prisma.FriendDeleteArgs): Promise<PrismaFriend> {
    return this.prisma.friend.delete(args);
  }
}
